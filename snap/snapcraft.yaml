name: goldencheetah
version: '3.4.0'
summary: GoldenCheetah is a data analysis tool for cyclists and triathletes
description: |
  GoldenCheetah is an open-source data analysis tool primarily written in C++ with Qt for cyclists
  and triathletes with support for training as well.
  GoldenCheetah can connect with indoor trainers and cycling equipment such as cycling computers
  and power meters to import data. In addition, GoldenCheetah can connect to cloud services.
  It can then manipulate and view the data, as well as analyze it.
grade: stable
confinement: strict
#icon: snap/gui/icon.png
apps:
  GoldenCheetah:
    command: desktop-launch $SNAP/opt/GoldenCheetah/GoldenCheetah
    environment:
      R_HOME: $SNAP/usr/lib/R
    desktop: usr/share/applications/goldencheetah.desktop
    plugs:
      - home
      - x11
      - wayland
      - desktop
      #- desktop-legacy
      - unity7
      - browser-support
      - opengl
      - network
      - network-bind
      - removable-media
      - raw-usb

parts:
  goldencheetah:
    source: https://github.com/GoldenCheetah/GoldenCheetah.git
    source-tag: release_3.4.0
    plugin: qmake
    qt-version: qt5
    after: [desktop-qt5] # see https://github.com/Ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
    build-packages:
      - wget
      - libqt5svg5-dev
      - libqt5webkit5-dev
      - libqt5serialport5-dev
      - qtmultimedia5-dev
      - qtconnectivity5-dev
      - qt5-default
      - qttools5-dev-tools
      - libglu1-mesa-dev
      - libgstreamer0.10-0
      - libgstreamer-plugins-base0.10-0
      - libssl-dev
      - libsamplerate0-dev
      - libpulse-dev
      - libvlc-dev
      - libvlccore-dev
      - libusb-dev
      - libusb-1.0-0-dev
      - libudev-dev
      - r-base-dev
      - bison
      - flex
    stage-packages:
      - libicu55
      - libqt5bluetooth5
      - libqt5concurrent5
      - libqt5dbus5
      #- libqt5gui5 # present in desktop-qt5
      - libqt5multimedia5
      - libqt5multimediawidgets5
      - libqt5network5
      - libqt5opengl5
      - libqt5positioning5
      - libqt5printsupport5
      - libqt5qml5
      - libqt5quick5
      - libqt5sensors5
      - libqt5serialport5
      - libqt5sql5
      - libqt5sql5-sqlite
      #- libqt5svg5 # present in desktop-qt5
      #- libqt5webchannel5 # not present in ubuntu 16.04
      - libqt5webkit5
      - libqt5widgets5
      - libqt5xml5
      - libsamplerate0
      - openssl
      - libusb-1.0-0
      - vlc
      - r-base-core
      - r-cran-rinside
      - qttools5-dev-tools # for lrelease?
      - libglu1-mesa
      - libgstreamer0.10-0
      - libgstreamer-plugins-base0.10-0
      - gawk
    prepare: |
      export SNAPCRAFT_PART_BUILD=$HOME/parts/$SNAPCRAFT_PROJECT_NAME/build
      export GC_COMMIT=`git rev-parse HEAD | cut -c 1-10`
      export GC_DATE=`git log -1 --date=iso --format=fuller | egrep ^CommitDate | cut -c 13-22`
      export GC_INFO=${GC_DATE}':master@'${GC_COMMIT}
      cp qwt/qwtconfig.pri.in qwt/qwtconfig.pri
      cp src/gcconfig.pri.in src/gcconfig.pri
      #echo DEFINES += GC_VERSION=\"${GC_INFO}\" >> src/gcconfig.pri
      sed -i "s|#\(CONFIG += release.*\)|\1 static|" src/gcconfig.pri
      #sed -i "s|#\(DEFINES += NOWEBKIT.*\)|\1|" src/gcconfig.pri # when WebKit is not available (e.g. QT >= 5.6)
      sed -i "s|#\(DEFINES += GC_WANT_R.*\)|\1|" src/gcconfig.pri
      sed -i "s|#\(QMAKE_LRELEASE = \).*|\1 lrelease|" src/gcconfig.pri
      sed -i "s|^#QMAKE_CXXFLAGS|QMAKE_CXXFLAGS|" src/gcconfig.pri
      #sed -i "s|#\(SRMIO_INSTALL =.*\)|\1 /usr|" src/gcconfig.pri
      wget http://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx1.0.4.tar.gz
      tar -xf libftd2xx1.0.4.tar.gz
      sed -i "s|#\(D2XX_INCLUDE =.*\)|\1 $SNAPCRAFT_PART_BUILD/libftd2xx1.0.4|" src/gcconfig.pri
      #sed -i "s|#\(QWT3D_INSTALL =.*\)|\1 $SNAPCRAFT_PART_INSTALL/usr|" src/gcconfig.pri
      #sed -i "s|#\(KML_INSTALL =\).*|\1 $SNAPCRAFT_PART_INSTALL/usr|" src/gcconfig.pri
      #sed -i "s|#\(ICAL_INSTALL =.*\)|\1 $SNAPCRAFT_PART_INSTALL/usr|" src/gcconfig.pri
      #sed -i "s|#\(ICAL_INCLUDE =.*\)|\1 $SNAPCRAFT_PART_BUILD/usr/include/libical|" src/gcconfig.pri
      #sed -i "s|#\(ICAL_LIBS    =.*\)|\1 $SNAPCRAFT_PART_INSTALL/usr/lib/libical.a $SNAPCRAFT_PART_INSTALL/usr/lib/libicalss.a $SNAPCRAFT_PART_INSTALL/usr/lib/libicalvcal.a|" src/gcconfig.pri
      #sed -i "s|#\(LMFIT_INSTALL =\).*|\1 $SNAPCRAFT_PART_INSTALL/usr|" src/gcconfig.pri
      sed -i "s|#\(LIBUSB_INSTALL =\).*|\1 $SNAPCRAFT_PART_INSTALL/lib/x86_64-linux-gnu|" src/gcconfig.pri
      #sed -i "s|#\(LIBUSB_LIBS    =.*\)|\1 /usr/lib/x86_64-linux-gnu/libusb-1.0.a -lusb-1.0 -ldl -ludev|" src/gcconfig.pri
      sed -i "s|#\(VLC_INSTALL =.*\)|\1 /usr/lib/vlc|" src/gcconfig.pri
      sed -i "s|#\(VLC_INCLUDE =.*\)|\1 /usr/include/vlc|" src/gcconfig.pri
      sed -i "s|#\(VLC_LIBS    =.*\)|\1 -lvlc -lvlccore|" src/gcconfig.pri
      sed -i "s|#\(SAMPLERATE_INSTALL =\).*|\1 /usr|" src/gcconfig.pri
      sed -i "s|#\(SAMPLERATE_LIBS =\).*|\1 -lsamplerate|" src/gcconfig.pri
      sed -i "s|^#LIBZ_LIBS|LIBZ_LIBS|" src/gcconfig.pri
      sed -i "s|^#HTPATH|HTPATH|" src/gcconfig.pri
      sed -i "s|\(DEFINES += GC_VIDEO_NONE.*\)|#\1 |" src/gcconfig.pri
      sed -i "s|#\(DEFINES += GC_VIDEO_VLC.*\)|\1|" src/gcconfig.pri
      #sed -i "s/__GC_GOOGLE_CALENDAR_CLIENT_SECRET__/"$GC_GOOGLE_CALENDAR_CLIENT_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_STRAVA_CLIENT_SECRET__/"$GC_STRAVA_CLIENT_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_DROPBOX_CLIENT_SECRET__/"$GC_DROPBOX_CLIENT_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_CYCLINGANALYTICS_CLIENT_SECRET__/"$GC_CYCLINGANALYTICS_CLIENT_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_TWITTER_CONSUMER_SECRET__/"$GC_TWITTER_CONSUMER_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_DROPBOX_CLIENT_ID__/"$GC_DROPBOX_CLIENT_ID"/" src/Core/Secrets.h
      #sed -i "s/__GC_MAPQUESTAPI_KEY__/"$GC_MAPQUESTAPI_KEY"/" src/Core/Secrets.h
      #sed -i "s/__GC_CLOUD_DB_BASIC_AUTH__/"$GC_CLOUD_DB_BASIC_AUTH"/" src/Core/Secrets.h
      #sed -i "s/__GC_CLOUD_DB_APP_NAME__/"$GC_CLOUD_DB_APP_NAME"/" src/Core/Secrets.h
      #sed -i "s/__GC_GOOGLE_DRIVE_CLIENT_ID__/"$GC_GOOGLE_DRIVE_CLIENT_ID"/" src/Core/Secrets.h
      #sed -i "s/__GC_GOOGLE_DRIVE_CLIENT_SECRET__/"$GC_GOOGLE_DRIVE_CLIENT_SECRET"/" src/Core/Secrets.h
      #sed -i "s/__GC_GOOGLE_DRIVE_API_KEY__/"$GC_GOOGLE_DRIVE_API_KEY"/" src/Core/Secrets.h
      #sed -i "s/__GC_TODAYSPLAN_CLIENT_SECRET__/"$GC_TODAYSPLAN_CLIENT_SECRET"/" src/Core/Secrets.h
      lupdate src/src.pro
      cat src/gcconfig.pri
    build: |
      export QT_SELECT=5
      qmake -recursive
      make --silent -j3 || make
    install: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/GoldenCheetah
      cp src/GoldenCheetah $SNAPCRAFT_PART_INSTALL/opt/GoldenCheetah/
      #ln -fs $SNAPCRAFT_PART_INSTALL/opt/GoldenCheetah/GoldenCheetah $SNAPCRAFT_PART_INSTALL/usr/bin/GoldenCheetah
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/udev/rules.d
      cp src/Resources/linux/*.rules $SNAPCRAFT_PART_INSTALL/etc/udev/rules.d
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/pixmaps
      cp src/Resources/images/gc.png $SNAPCRAFT_PART_INSTALL/usr/share/pixmaps
      #cp ${TRAVIS_BUILD_DIR}/usr/lib/libftd2xx.so  $SNAPCRAFT_PART_INSTALL/usr/lib/
      $SNAPCRAFT_PART_INSTALL/usr/lib/vlc/vlc-cache-gen --force $SNAPCRAFT_PART_INSTALL/usr/lib/vlc/plugins/

  # qtwebchannel manual compile: not present in ubuntu 16.04 as a package
  qtwebchannel:
    source: git://code.qt.io/qt/qtwebchannel.git
    source-tag: v5.5.1 # use same version as the one in snapcraft on 16.04
    plugin: qmake
    qt-version: qt5
    after: [desktop-qt5]
    build-packages:
      - qtbase5-private-dev

  # D2XX - For Powertap downloads via USB
  #d2xx:
  #  source: http://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx1.0.4.tar.gz
  #  plugin: qmake
  #  qt-version: qt5
  #  after: [desktop-qt5]

  # Additional files if any are copied from our src directory
  misc-files:
    source: src/
    plugin: dump
    after: [goldencheetah]
